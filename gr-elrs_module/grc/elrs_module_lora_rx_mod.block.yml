# File: lora_sdr_lora_rx_mod.block.yml
id: lora_sdr_lora_rx_mod
label: LoRa RX (Binary MOD)
category: '[elrs_module]'
flags: [python]

parameters:
-   id: center_freq
    label: Center Frequency
    dtype: float
    default: 868100000
-   id: samp_rate
    label: Input Sampling Rate
    dtype: int
    default: 250000
-   id: bw
    label: Bandwidth
    dtype: int
    default: 125000
-   id: sf
    label: Spreading Factor
    dtype: int
    default: 7
-   id: impl_head
    label: Implicit Header
    dtype: enum
    options: ['True','False']
    option_labels: ['Yes','No']
    default: 'False'
-   id: cr
    label: Coding Rate
    dtype: int
    options: ['1','2','3','4']
    option_labels: ['4/5','4/6','4/7','4/8']
    default: '1'
    hide: ${ 'none' if str(impl_head) == "True" else 'all' }
-   id: has_crc
    label: CRC Presence
    dtype: enum
    options: ['True','False']
    option_labels: ['Yes','No']
    default: 'True'
    hide: ${ 'none' if str(impl_head) == "True" else 'all' }
-   id: pay_len
    label: Payload Length
    dtype: int
    default: '255'
    hide: ${ 'none' if str(impl_head) == "True" else 'all' }
-   id: soft_decoding
    label: Use Soft-Decision Decoding
    dtype: enum
    options: ['True','False']
    option_labels: ['Yes','No']
    default: 'False'
-   id: ldro
    label: LDRO
    dtype: enum
    options: ['0','1','2']
    option_labels: ['Disable','Enable','Auto']
    default: '2'
-   id: sync_word
    label: Sync Word
    dtype: raw
    hide: part
    default: '[0x12]'

inputs:
-   label: in
    dtype: complex
    vlen: 1

outputs:
-   label: out
    domain: message
    id: out

templates:
    imports: from gnuradio.elrs_module.lora_sdr_lora_rx_mod import lora_sdr_lora_rx_mod
    make: "lora_sdr_lora_rx_mod(\n    center_freq=${center_freq},\n    bw=${ bw },\n    cr=${ cr },\n    has_crc=${ has_crc},\n    impl_head=${ impl_head },\n    pay_len=${ pay_len },\n    samp_rate=${samp_rate },\n    sf=${ sf },\n    sync_word=${sync_word},\n    soft_decoding=${ soft_decoding },\n    ldro_mode=${ldro}\n)"

asserts:
- ${ (samp_rate/bw).is_integer()}

documentation: |-
    Complete LoRa receiver that outputs binary u8vector messages.
    This is a modified version of the standard LoRa receiver. It replaces the final CRC verification block to assemble the full payload from the stream and output it as a single asynchronous u8vector message. This block has no streaming output.

    Parameters:
        - Center Frequency: Center frequency of the LoRa signal for frame synchronization.
        - Input sampling rate: Input sampling rate (Should be an integer multiple of Bandwidth)
        - Bandwidth: bandwidth of the LoRa signal
        - Spreading factor
        - Implicit header: Use implicit header mode, else use explicit
        - Coding rate: coding rate to use (only for implicit mode)
        - CRC presence: Payload contains a CRC (only for implicit mode)
        - Payload length: Length of the payload in bytes (only for implicit mode)
        - Use soft-decision decoding
        - LDRO: Usage of low data rate optimisation mode
        - Sync word: Sync word to use

    Inputs:
        - in: Stream of complex samples from an SDR source.
    Outputs:
        - out (message): Message containing the received payload as a PMT u8vector.

file_format: 1